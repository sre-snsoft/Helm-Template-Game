{{- range .Values.microservices }}
  {{- $microservice := . }}
{{- $labels := dict "app.kubernetes.io/instance" (printf "%s-server" $microservice.name | lower) "app.kubernetes.io/name" (printf "%s-server" $microservice.name | lower) }}
{{- if .rollout.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  labels: {{ $labels | toYaml | nindent 4 }}
  name: {{ $microservice.name | lower }}-server
  namespace: {{ $.Values.global.namespace }}
spec:
  {{- if .rollout.enabled }}
  strategy:
    canary:
      canaryService: {{ .rollout.canaryService }}
      stableService: {{ .rollout.stableService }}
      trafficRouting:
        {{- if .rollout.alb.enabled }}
        # ALB traffic routing configuration
        alb:
          ingress: {{ .rollout.alb.ingress }}
          rootService: {{ .rollout.alb.rootService }}
          servicePort: {{ .rollout.alb.servicePort | default 443 }}
        managedRoutes:
          - name: set-header-{{ .name | lower }}
        {{- else }}
        # Default to APIsix traffic routing if it's not ALB
        apisix:
          route:
            name: {{ .rollout.apisixRoute }}
            rules:
              {{- with .rollout.apisixRules }}
                {{- toYaml . | nindent 14 }}
              {{- end }}
        managedRoutes:
          - name: set-header-{{ .name | lower }}
        {{- end }}
      {{- if .rollout.maxUnavailable }}
      maxUnavailable: {{ .rollout.maxUnavailable }}
      {{- end }}
      steps:
      {{- if .rollout.setHeaderRoute }}
        - setHeaderRoute:
            match:
              - headerName: true-client-ip
                headerValue:
                  {{- if .rollout.setHeaderRoute.exact }}
                  exact: {{ .rollout.setHeaderRoute.exact }}
                  {{- end }}
                  regex: {{ .rollout.setHeaderRoute.headerValue }}
            name: set-header-{{ .name | lower }}
      {{- end }}
        - setCanaryScale:
          {{- with .rollout.setCanaryScaleWeight }}
            weight: {{ . }}
          {{- end }}
          {{- with .rollout.setCanaryScaleReplica }}
            replicas: {{ . }}
          {{- end }}
          {{- with .rollout.matchTrafficWeight }}
            matchTrafficWeight: {{ . }}
          {{- end }}
      {{- with .rollout.stepsSetWeight }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}
  {{- with .progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ . }}
  {{- end }}
  {{- if not .scaledObject.enabled }}
  replicas: {{ .replica }}
  {{- end }}
  revisionHistoryLimit: {{ .revisionHistoryLimit | default 3 }}
  selector:
    matchLabels: {{ $labels | toYaml | nindent 6 }}
  {{- if not .rollout.enabled }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .maxSurge }}
      maxUnavailable: {{ .maxUnavailable }}
    type: RollingUpdate
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $microservice.name | lower }}-server
        app.kubernetes.io/name: {{ $microservice.name | lower }}-server
      {{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8}}
      {{- end }}
      {{- with .serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
      containers:
        - name: {{ $microservice.name | lower }}
          image: "{{ $.Values.global.ecr }}/{{ .ecrName }}:{{ .imageTag }}"
          imagePullPolicy: Always
          {{- with .securityContext }}
          securityContext:
            privileged: {{ .privileged }}
            runAsUser: {{ .runAsUser }}
          {{- end }}
          {{- with .command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .lifecycle }}
          lifecycle:
            preStop:
              exec:
                command: {{ . }}
          {{- end }}
          {{- with .ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .startupProbe.enabled }}
          {{- include "probe" (dict "type" "startupProbe" "enabled" .startupProbe.enabled "method" .startupProbe.method "port" .startupProbe.port "path" .startupProbe.path "command" .startupProbe.command "custom" .startupProbe.custom "initialDelaySeconds" .startupProbe.initialDelaySeconds "periodSeconds" .startupProbe.periodSeconds "successThreshold" .startupProbe.successThreshold "failureThreshold" .startupProbe.failureThreshold "timeoutSeconds" .startupProbe.timeoutSeconds ) | nindent 10 }}
          {{- end }}
          {{- if .readinessProbe.enabled }}
          {{- include "probe" (dict "type" "readinessProbe" "enabled" .readinessProbe.enabled "method" .readinessProbe.method "port" .readinessProbe.port "path" .readinessProbe.path "command" .readinessProbe.command "custom" .readinessProbe.custom "initialDelaySeconds" .readinessProbe.initialDelaySeconds "periodSeconds" .readinessProbe.periodSeconds "successThreshold" .readinessProbe.successThreshold "failureThreshold" .readinessProbe.failureThreshold "timeoutSeconds" .readinessProbe.timeoutSeconds ) | nindent 10 }}
          {{- end }}
          {{- if .livenessProbe.enabled }}
          {{- include "probe" (dict "type" "livenessProbe" "enabled" .livenessProbe.enabled "method" .livenessProbe.method "port" .livenessProbe.port "path" .livenessProbe.path "command" .livenessProbe.command "custom" .livenessProbe.custom "initialDelaySeconds" .livenessProbe.initialDelaySeconds "periodSeconds" .livenessProbe.periodSeconds "successThreshold" .livenessProbe.successThreshold "failureThreshold" .livenessProbe.failureThreshold "timeoutSeconds" .livenessProbe.timeoutSeconds ) | nindent 10 }}
          {{- end }}
          {{- include "resourceRequest" . | nindent 10 }}
          {{- with .volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TZ
              value: "Asia/Singapore"
          {{- with .env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .terminationMessagePath }}
          terminationMessagePath: {{ . }}
          {{- end }}
          {{- with .terminationMessagePolicy }}
          terminationMessagePolicy: {{ . }}
          {{- end }}
          {{- with .workingDir }}
          workingDir: {{ . }}
          {{- end }}
      {{- with .dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      dnsConfig:
        options:
        - name: ndots
          value: {{ .ndots.value | quote }}
      {{- with .restartPolicy }}
      restartPolicy: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds | default 15 }}
      {{- with .volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
